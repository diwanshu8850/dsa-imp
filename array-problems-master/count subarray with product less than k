https://practice.geeksforgeeks.org/problems/count-the-subarrays-having-product-less-than-k/0


#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	ll t;
	cin>>t;
	while(t--){
	    ll n,k;
	    cin>>n>>k;
	    ll A[n];
	    for(ll i=0;i<n;i++){
	        cin>>A[i];
	    }
      
      // simply following window sliding technique
      // if the current product is greater than k then we simply remove the elements from the start of the window untill product is less or there remains only one element
      // to count the subarray we are just counting for the particular (i) how many we can form by starting with this index
	    ll c=0,j=0,p=1;
	    for(ll i=0;i<n;i++){
	        p = p*A[i];
	        while(p>k && j<i){
	            p = p/A[j];
	            j+=1;
	        }
	        if(p<k){
	            c+=(i-j+1);
	        }
	    }
	    cout<<c<<endl;
	}
	
	return 0;
}
